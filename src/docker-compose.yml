services:

  api-gateway:
    container_name: api-gateway
    restart: unless-stopped
    build:
      context: .
      dockerfile: nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/certificates/localhost.key:/etc/nginx/certificates/localhost.key
      - ./nginx/certificates/localhost.crt:/etc/nginx/certificates/localhost.crt
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - user-service
      - movie-service
      - booking-service

  user-service:
    container_name: user-service
    restart: unless-stopped
    build:
      context: .
      dockerfile: server/UsersDockerfile
    ports:
      - "7101:7001"
    environment:
      - APP_PORT=7001
      - ASPNETCORE_ENVIRONMENT=Production
      - CONNECTION_STRING=Host=user-postgres;Port=5432;Database=cinema_users;Username=postgres;Password=1;Timezone=Europe/Minsk;
      - REDIS_CONFIGURATION=redis:6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    volumes:
      - ./nginx/certificates/localhost.pfx:/app/localhost.pfx
    depends_on:
      - user-postgres
      - redis
      - rabbitmq

  movie-service:
    container_name: movie-service
    restart: unless-stopped
    build:
      context: .
      dockerfile: server/MoviesDockerfile
    ports:
      - "7102:7002"
    environment:
      - APP_PORT=7002
      - USERS_APP_PORT=7001
      - BOOKINGS_APP_PORT=7003
      - ASPNETCORE_ENVIRONMENT=Production
      - CONNECTION_STRING=Host=movie-postgres;Port=5432;Database=cinema_movies;Username=postgres;Password=1;Timezone=Europe/Minsk;
      - REDIS_CONFIGURATION=redis:6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    volumes:
      - ./nginx/certificates/localhost.pfx:/app/localhost.pfx
    depends_on:
      - movie-postgres
      - redis
      - rabbitmq

  booking-service:
    container_name: booking-service
    restart: unless-stopped
    build:
      context: .
      dockerfile: server/BookingsDockerfile
    ports:
      - "7103:7003"
    environment:
      - APP_PORT=7003
      - USERS_APP_PORT=7001
      - MOVIES_APP_PORT=7002
      - ASPNETCORE_ENVIRONMENT=Production
      - CONNECTION_STRING=mongodb://root:password@booking-mongodb:27017/CinemaBookings/?authSource=admin&authMechanism=SCRAM-SHA-1&maxPoolSize=100&minPoolSize=10
      - DATABASE_NAME=CinemaBookings
      - HANGFIRE_CONNECTION_STRING=mongodb://root:password@booking-mongodb:27017/CinemaHangfire/?authSource=admin&authMechanism=SCRAM-SHA-1&maxPoolSize=50&minPoolSize=5
      - REDIS_CONFIGURATION=redis:6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    volumes:
      - ./nginx/certificates/localhost.pfx:/app/localhost.pfx
    depends_on:
      - booking-mongodb
      - redis
      - rabbitmq

  user-postgres:
    container_name: user-postgres
    image: postgres:alpine
    mem_limit: 512m
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1
      POSTGRES_DB: cinema_users
    volumes:
      - user-postgres-data:/var/lib/postgresql/data

  movie-postgres:
    container_name: movie-postgres
    image: postgres:alpine
    mem_limit: 512m
    restart: unless-stopped
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1
      POSTGRES_DB: cinema_movies
    volumes:
      - movie-postgres-data:/var/lib/postgresql/data

  booking-mongodb:
    container_name: booking-mongodb
    image: mongo:latest
    mem_limit: 512m
    restart: unless-stopped
    ports:
      - "27018:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=admin
    command: [ "mongod", "--auth" ]
    volumes:
      - mongo-data:/data/db

  redis:
    container_name: redis
    image: redis:alpine
    mem_limit: 256m
    restart: unless-stopped
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: 1

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    mem_limit: 512m
    restart: unless-stopped
    ports:
      - "5673:5672"
      - "15673:15672"

volumes:
  user-postgres-data:
  movie-postgres-data:
  mongo-data: